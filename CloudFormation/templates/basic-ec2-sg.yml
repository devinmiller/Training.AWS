AWSTemplateFormatVersion: 2010-09-09
Description: A very basic EC2 instance with security group.
Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.small
      - t3.medium
    Description: 
      EC2 Instance Type
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair
  ServiceName:
    Type: String
    Description: The name of the service.
Mappings:
  RegionMap:
    us-west-2:
      AMI: ami-0d6621c01e8c2de2c
    us-east-2:
      AMI: ami-0f7919c33c90f5b58
Resources:
  EC2Instance: 
    Type: AWS::EC2::Instance
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-helper-scripts-reference.html
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_setupCfnHup
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
          UpdateEnvironment:
            - 02_config-amazon-cloudwatch-agent
            - 03_restart_amazon-cloudwatch-agent
        # Cfn-hup setting, it is to monitor the change of metadata.
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-hup.html
        # When there is change in the contents of json file in the metadata section, cfn-hup will call cfn-init to restart the AmazonCloudWatchAgent.
        01_setupCfnHup:
          files:
             '/etc/cfn/cfn-hup.conf':
               content: !Sub |
                 [main]
                 stack=${AWS::StackId}
                 region=${AWS::Region}
                 interval=1
               mode: '000400'
               owner: root
               group: root
             '/etc/cfn/hooks.d/amazon-cloudwatch-agent-auto-reloader.conf':
               content: !Sub |
                 [cfn-auto-reloader-hook]
                 triggers=post.update
                 path=Resources.EC2Instance.Metadata.AWS::CloudFormation::Init.02_config-amazon-cloudwatch-agent
                 action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets UpdateEnvironment
                 runas=root
               mode: '000400'
               owner: root
               group: root
             "/lib/systemd/system/cfn-hup.service":
                content: !Sub |
                  [Unit]
                  Description=cfn-hup daemon
                  [Service]
                  Type=simple
                  ExecStart=/opt/aws/bin/cfn-hup
                  Restart=always
                  [Install]
                  WantedBy=multi-user.target    
          commands:
            01enable_cfn_hup:
              command: !Sub |
                systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: !Sub |
                systemctl start cfn-hup.service
        # Definition of json configuration of AmazonCloudWatchAgent, you can change the configuration below.
        02_config-amazon-cloudwatch-agent:
          files:
            '/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json':
              content: !Sub |
                {
                    "agent": {
                        "metrics_collection_interval": 60,
                        "run_as_user": "root"
                    },
                    "metrics": {
                        "namespace": "System/Linux",
                        "append_dimensions": {
                            "ImageId": "${!aws:ImageId}",
                            "InstanceId": "${!aws:InstanceId}",
                            "InstanceType": "${!aws:InstanceType}"
                        },
                        "metrics_collected": {
                            "disk": {
                                "measurement": [
                                    {"name": "used_percent", "rename": "DiskSpaceUtilization"}
                                ],
                                "metrics_collection_interval": 60,
                                "resources": [
                                        "*"
                                ]
                            },
                            "mem": {
                                "measurement": [
                                    {"name": "mem_used_percent", "rename": "MemoryUtilization"}
                                ],
                                "metrics_collection_interval": 60
                            }
                        }
                    }
                }
        # Invoke amazon-cloudwatch-agent-ctl to restart the AmazonCloudWatchAgent.
        03_restart_amazon-cloudwatch-agent:
          commands:
            01_stop_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a stop
            02_start_service:
              command: /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
    Properties:
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref CloudWatchAgentProfile
      ImageId: 
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - AMI
      InstanceType: !Ref InstanceType
      Tags:
        - Key: "Name"
          Value: !Ref ServiceName
      SecurityGroups:
        - !Ref BasicSecurityGroup
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash -ex
            #yum install -y aws-cfn-bootstrap
            rpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region} --configsets default
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource EC2Instance --region ${AWS::Region}      
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT15M"
  BasicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access on port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  CloudWatchAgentProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - "CloudWatchAgentServerRole"
Outputs:
  ServerDns:
    Value: !GetAtt
      - EC2Instance
      - PublicDnsName